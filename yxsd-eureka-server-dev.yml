
spring:
  application:
    name: yxsd-eureka-server
    
management: 
  endpoints: 
    web: 
      exposure: 
        include: bus-refresh,health,info # 2.X 版本的配置方式。默认只有health,info，这里需要将refresh添加上【手动刷新使用的是refresh，使用消息总线则是bus-refresh】 
  endpoint: 
    health: 
      show-details: always
    

---
spring: 
  profiles: peer1 # 通过profile指定启动服务
  security: # 配置安全验证
    user: 
      name: admin 
      password: 123456 
server: 
  port: 8761 
eureka: 
  server: 
    enable-self-preservation: false # 测试时关闭自我保护机制，保证不可用服务及时踢出【生成环境不要打开】 
  instance: 
    hostname: peer1
  client: 
    serviceUrl: 
      defaultZone: http://admin:123456@peer2:8762/eureka/,http://admin:123456@peer2:8762/eureka/
    # fetch-registry: true # 表示是否从eureka server获取注册信息，如果是单一节点，不需要同步其他eureka server节点，则可以设置为false，但此处为集群，应该设置为true，默认为true，可不设置
    # register-with-eureka: true # 表示是否将自己注册到eureka server，因为要构建集群环境，需要将自己注册到及群众，所以应该开启。默认为true，可不显式设置。
    
---
spring: 
  profiles: peer2 
  security: 
    user: 
      name: admin 
      password: 123456 
server: 
  port: 8762 
eureka: 
  server: 
    enable-self-preservation: false # 测试时关闭自我保护机制，保证不可用服务及时踢出 
  instance: 
    hostname: peer2 
  client: 
    serviceUrl: 
      defaultZone: http://admin:123456@peer1:8761/eureka/,http://admin:123456@peer3:8763/eureka/
---
spring: 
  profiles: peer3
  security: 
    user: 
      name: admin 
      password: 123456 
server: 
  port: 8763
eureka: 
  server: 
    enable-self-preservation: false # 测试时关闭自我保护机制，保证不可用服务及时踢出 
  instance: 
    hostname: peer3
  client: 
    serviceUrl: 
      defaultZone: http://admin:123456@peer1:8761/eureka/,http://admin:123456@peer2:8762/eureka/
